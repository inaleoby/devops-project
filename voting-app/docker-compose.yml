name: vote_app

version: '3.1'

services:

  vote:
    stdin_open: true 
    tty: true
    container_name: vote
    image: espoir10/vote
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "8096:80"
    networks:
      - frontend
      - backend
    restart: always
   
  result:
    container_name: result
    image: espoir10/result
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8097:80"
    networks:
      - frontend
      - backend 
    restart: always
    
  db:
    container_name: db
    image: postgres:15
    environment:
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - donnees_postgres:/var/lib/postgresql/data
      - logs_postgres:/var/log/postgresql  
      - config_postgres:/etc/postgresql
    networks:
      - backend
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s   
      timeout: 5s       
      retries: 5          
      start_period: 10s
    restart: always
       
  worker:
    container_name: worker
    image: espoir10/worker
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend
    restart: always
        
  redis:
    container_name: redis
    image: redis
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - donnees_redis:/data
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s  
      timeout: 2s   
      retries: 3         
      start_period: 5s
    restart: always

volumes:
  donnees_postgres:
  logs_postgres:
  config_postgres:
  donnees_redis:
networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
